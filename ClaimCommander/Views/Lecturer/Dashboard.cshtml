@model LecturerDashboardViewModel
@{
    ViewData["Title"] = "Lecturer Dashboard";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="mb-4">
    <h2 class="display-6 fw-bold">Lecturer Dashboard</h2>
    <p class="text-secondary">Manage your teaching claims</p>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-body p-4">
        <h4 class="card-title fw-semibold">Submit New Claim</h4>
        <form asp-action="SubmitClaim" method="post" enctype="multipart/form-data" class="mt-3">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="mb-3">
                <label asp-for="NewClaimForm.SelectedSubjectId" class="form-label">Subject</label>
                <select asp-for="NewClaimForm.SelectedSubjectId" asp-items="Model.NewClaimForm.Subjects" class="form-select">
                    <option disabled selected value="">Select assigned subject</option>
                </select>
                <span asp-validation-for="NewClaimForm.SelectedSubjectId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="NewClaimForm.HoursWorked" class="form-label">Teaching Hours</label>
                <input asp-for="NewClaimForm.HoursWorked" class="form-control" placeholder="Enter hours taught">
                <span asp-validation-for="NewClaimForm.HoursWorked" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="documentFile" class="form-label">Supporting Document</label>
                <input name="documentFile" type="file" class="form-control" id="documentFile" />
                <small class="form-text text-secondary">Optional. Upload PDF, DOCX, or XLSX files.</small>
            </div>

            <div class="d-grid mt-4">
                <button type="submit" class="btn btn-primary btn-lg" style="padding: 0.75rem;">Submit Claim</button>
            </div>
        </form>
    </div>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
        <h5 class="mb-0 fw-semibold">Claim Status</h5>
        <a href="#" class="btn btn-link text-decoration-none">View All</a>
    </div>
    <div class="card-body">
        @foreach (var claim in Model.RecentClaims)
        {
            var statusClass = claim.Status == "Approved" ? "success" : claim.Status == "Pending" ? "warning" : "primary";
            var statusIcon = claim.Status == "Approved" ? "bi-check-circle-fill" : claim.Status == "Pending" ? "bi-clock-history" : "bi-arrow-repeat";

            <div class="card claim-card shadow-sm mb-3 border-2 border-@statusClass">
                <div class="card-body">
                    <div class="d-flex align-items-start">
                        <div class="claim-card-icon bg-@statusClass">
                            <i class="bi @statusIcon fs-4"></i>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <div class="d-flex justify-content-between">
                                <p class="fw-semibold mb-0">@claim.Subject.Name</p>
                                <span class="badge rounded-pill bg-@statusClass bg-opacity-10 text-@statusClass border border-@statusClass border-opacity-10 fs-6 align-self-start">@claim.Status.ToUpper()</span>
                            </div>
                            <div class="row g-3 mt-2">
                                <div class="col-auto"><small>@claim.HoursWorked hours claimed</small></div>
                                <div class="col-auto"><small>Submitted @claim.SubmissionDate.ToString("MMM d, yyyy")</small></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-header bg-transparent">
        <h5 class="mb-0 fw-semibold">Monthly Summary</h5>
    </div>
    <div class="card-body p-4">
        <div class="row text-center">
            <div class="col-4">
                <h2 class="fw-bold display-5">@Model.TotalHoursMonth</h2>
                <p class="text-secondary">Total Hours</p>
            </div>
            <div class="col-4">
                <h2 class="fw-bold display-5 text-warning">@Model.PendingClaimsCount</h2>
                <p class="text-secondary">Pending</p>
            </div>
            <div class="col-4">
                <h2 class="fw-bold display-5 text-success">@Model.ApprovedValueMonth.ToString("C", new System.Globalization.CultureInfo("en-ZA"))</h2>
                <p class="text-secondary">Approved Value</p>
            </div>
        </div>
    </div>
</div>